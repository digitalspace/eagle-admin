# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Eagle Admin Package
on:
  push:
    branches:
      - 'develop'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node 10.x
        uses: actions/setup-node@v2
        with:
          node-version: 10
      - name: Adjust env.js 1
        run: sed 's/http:\/\/localhost:3000/https:\/\/eagle-prod.apps.silver.devops.gov.bc.ca/g' src/env.js.template | sed 's/local/AWS/g' > src/env.js
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build:ci
      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_dist
          path: dist
      - name: Deploy to S3 
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'dist'
      - name: "SAM setup"
        uses: falnyr/aws-sam-deploy-action@v1.3.0
        env:
          TEMPLATE: 'template.yaml'
          AWS_STACK_NAME: 'lambdaEdgeApp'
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEPLOY_BUCKET: ${{ secrets.AWS_DEPLOY_BUCKET }}
      # - name: Build lambda environment
      #   run: cd lambda && npm install && zip -qq -r -j ../bundle.zip .
      # - name: Deploy zip to aws lambda
      #   uses: appleboy/lambda-action@master
      #   with:
      #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws_region: ${{ secrets.AWS_REGION }}
      #     function_name: lambdaEdge
      #     zip_file: bundle.zip
